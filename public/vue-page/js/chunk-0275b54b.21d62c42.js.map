{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es.string.starts-with.js","webpack:///./node_modules/core-js/modules/es.string.replace.js","webpack:///./node_modules/core-js/modules/es.array.index-of.js","webpack:///./src/services/teamParser.js"],"names":["$","getOwnPropertyDescriptor","f","toLength","notARegExp","requireObjectCoercible","correctIsRegExpLogic","IS_PURE","nativeStartsWith","startsWith","min","Math","CORRECT_IS_REGEXP_LOGIC","MDN_POLYFILL_BUG","descriptor","String","prototype","writable","target","proto","forced","searchString","that","this","index","arguments","length","undefined","search","call","slice","fixRegExpWellKnownSymbolLogic","anObject","toObject","toInteger","advanceStringIndex","regExpExec","max","floor","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","maybeToString","it","REPLACE","nativeReplace","maybeCallNative","reason","REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE","REPLACE_KEEPS_$0","UNSAFE_SUBSTITUTE","searchValue","replaceValue","O","replacer","regexp","indexOf","res","done","value","rx","S","functionalReplace","global","fullUnicode","unicode","lastIndex","results","result","push","matchStr","accumulatedResult","nextSourcePosition","i","matched","position","captures","j","namedCaptures","groups","replacerArgs","concat","replacement","apply","getSubstitution","str","tailPos","m","symbols","match","ch","capture","charAt","n","$indexOf","arrayMethodIsStrict","arrayMethodUsesToLength","nativeIndexOf","NEGATIVE_ZERO","STRICT_METHOD","USES_TO_LENGTH","ACCESSORS","1","searchElement","parseAbility","ability","pokemon","replace","split","toLocaleLowerCase","parseLevel","level","Number","parseNameAndItem","part","item","name","nicknamed","includes","parseEvs","evs","spread","label","hp","atk","def","spa","spd","spe","forEach","e","stat","val","parseIvs","ivs","parseMoves","moves","parseTeam","pokemonTeam","team","pkmn","p","pokeman","count","nature"],"mappings":"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","file":"js/chunk-0275b54b.21d62c42.js","sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar toLength = require('../internals/to-length');\nvar notARegExp = require('../internals/not-a-regexp');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar correctIsRegExpLogic = require('../internals/correct-is-regexp-logic');\nvar IS_PURE = require('../internals/is-pure');\n\nvar nativeStartsWith = ''.startsWith;\nvar min = Math.min;\n\nvar CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith');\n// https://github.com/zloirock/core-js/pull/702\nvar MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {\n  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');\n  return descriptor && !descriptor.writable;\n}();\n\n// `String.prototype.startsWith` method\n// https://tc39.github.io/ecma262/#sec-string.prototype.startswith\n$({ target: 'String', proto: true, forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC }, {\n  startsWith: function startsWith(searchString /* , position = 0 */) {\n    var that = String(requireObjectCoercible(this));\n    notARegExp(searchString);\n    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));\n    var search = String(searchString);\n    return nativeStartsWith\n      ? nativeStartsWith.call(that, search, index)\n      : that.slice(index, index + search.length) === search;\n  }\n});\n","'use strict';\nvar fixRegExpWellKnownSymbolLogic = require('../internals/fix-regexp-well-known-symbol-logic');\nvar anObject = require('../internals/an-object');\nvar toObject = require('../internals/to-object');\nvar toLength = require('../internals/to-length');\nvar toInteger = require('../internals/to-integer');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar advanceStringIndex = require('../internals/advance-string-index');\nvar regExpExec = require('../internals/regexp-exec-abstract');\n\nvar max = Math.max;\nvar min = Math.min;\nvar floor = Math.floor;\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d\\d?|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d\\d?)/g;\n\nvar maybeToString = function (it) {\n  return it === undefined ? it : String(it);\n};\n\n// @@replace logic\nfixRegExpWellKnownSymbolLogic('replace', 2, function (REPLACE, nativeReplace, maybeCallNative, reason) {\n  var REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE = reason.REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE;\n  var REPLACE_KEEPS_$0 = reason.REPLACE_KEEPS_$0;\n  var UNSAFE_SUBSTITUTE = REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE ? '$' : '$0';\n\n  return [\n    // `String.prototype.replace` method\n    // https://tc39.github.io/ecma262/#sec-string.prototype.replace\n    function replace(searchValue, replaceValue) {\n      var O = requireObjectCoercible(this);\n      var replacer = searchValue == undefined ? undefined : searchValue[REPLACE];\n      return replacer !== undefined\n        ? replacer.call(searchValue, O, replaceValue)\n        : nativeReplace.call(String(O), searchValue, replaceValue);\n    },\n    // `RegExp.prototype[@@replace]` method\n    // https://tc39.github.io/ecma262/#sec-regexp.prototype-@@replace\n    function (regexp, replaceValue) {\n      if (\n        (!REGEXP_REPLACE_SUBSTITUTES_UNDEFINED_CAPTURE && REPLACE_KEEPS_$0) ||\n        (typeof replaceValue === 'string' && replaceValue.indexOf(UNSAFE_SUBSTITUTE) === -1)\n      ) {\n        var res = maybeCallNative(nativeReplace, regexp, this, replaceValue);\n        if (res.done) return res.value;\n      }\n\n      var rx = anObject(regexp);\n      var S = String(this);\n\n      var functionalReplace = typeof replaceValue === 'function';\n      if (!functionalReplace) replaceValue = String(replaceValue);\n\n      var global = rx.global;\n      if (global) {\n        var fullUnicode = rx.unicode;\n        rx.lastIndex = 0;\n      }\n      var results = [];\n      while (true) {\n        var result = regExpExec(rx, S);\n        if (result === null) break;\n\n        results.push(result);\n        if (!global) break;\n\n        var matchStr = String(result[0]);\n        if (matchStr === '') rx.lastIndex = advanceStringIndex(S, toLength(rx.lastIndex), fullUnicode);\n      }\n\n      var accumulatedResult = '';\n      var nextSourcePosition = 0;\n      for (var i = 0; i < results.length; i++) {\n        result = results[i];\n\n        var matched = String(result[0]);\n        var position = max(min(toInteger(result.index), S.length), 0);\n        var captures = [];\n        // NOTE: This is equivalent to\n        //   captures = result.slice(1).map(maybeToString)\n        // but for some reason `nativeSlice.call(result, 1, result.length)` (called in\n        // the slice polyfill when slicing native arrays) \"doesn't work\" in safari 9 and\n        // causes a crash (https://pastebin.com/N21QzeQA) when trying to debug it.\n        for (var j = 1; j < result.length; j++) captures.push(maybeToString(result[j]));\n        var namedCaptures = result.groups;\n        if (functionalReplace) {\n          var replacerArgs = [matched].concat(captures, position, S);\n          if (namedCaptures !== undefined) replacerArgs.push(namedCaptures);\n          var replacement = String(replaceValue.apply(undefined, replacerArgs));\n        } else {\n          replacement = getSubstitution(matched, S, position, captures, namedCaptures, replaceValue);\n        }\n        if (position >= nextSourcePosition) {\n          accumulatedResult += S.slice(nextSourcePosition, position) + replacement;\n          nextSourcePosition = position + matched.length;\n        }\n      }\n      return accumulatedResult + S.slice(nextSourcePosition);\n    }\n  ];\n\n  // https://tc39.github.io/ecma262/#sec-getsubstitution\n  function getSubstitution(matched, str, position, captures, namedCaptures, replacement) {\n    var tailPos = position + matched.length;\n    var m = captures.length;\n    var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n    if (namedCaptures !== undefined) {\n      namedCaptures = toObject(namedCaptures);\n      symbols = SUBSTITUTION_SYMBOLS;\n    }\n    return nativeReplace.call(replacement, symbols, function (match, ch) {\n      var capture;\n      switch (ch.charAt(0)) {\n        case '$': return '$';\n        case '&': return matched;\n        case '`': return str.slice(0, position);\n        case \"'\": return str.slice(tailPos);\n        case '<':\n          capture = namedCaptures[ch.slice(1, -1)];\n          break;\n        default: // \\d\\d?\n          var n = +ch;\n          if (n === 0) return match;\n          if (n > m) {\n            var f = floor(n / 10);\n            if (f === 0) return match;\n            if (f <= m) return captures[f - 1] === undefined ? ch.charAt(1) : captures[f - 1] + ch.charAt(1);\n            return match;\n          }\n          capture = captures[n - 1];\n      }\n      return capture === undefined ? '' : capture;\n    });\n  }\n});\n","'use strict';\nvar $ = require('../internals/export');\nvar $indexOf = require('../internals/array-includes').indexOf;\nvar arrayMethodIsStrict = require('../internals/array-method-is-strict');\nvar arrayMethodUsesToLength = require('../internals/array-method-uses-to-length');\n\nvar nativeIndexOf = [].indexOf;\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;\nvar STRICT_METHOD = arrayMethodIsStrict('indexOf');\nvar USES_TO_LENGTH = arrayMethodUsesToLength('indexOf', { ACCESSORS: true, 1: 0 });\n\n// `Array.prototype.indexOf` method\n// https://tc39.github.io/ecma262/#sec-array.prototype.indexof\n$({ target: 'Array', proto: true, forced: NEGATIVE_ZERO || !STRICT_METHOD || !USES_TO_LENGTH }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf.apply(this, arguments) || 0\n      : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n","function parseAbility(ability, pokemon) {\n    if (!ability.startsWith(\"Ability:\")) return\n    ability = ability.replace(/\\s/g, \"\").split(\":\")[1].toLocaleLowerCase()\n    pokemon.ability = ability\n}\n\nfunction parseLevel(level, pokemon) {\n    if (!level.startsWith(\"Level:\")) return\n    level = level.replace(/\\s/g, \"\").split(\":\")[1].toLocaleLowerCase()\n    pokemon.level = Number(level)\n}\n\nfunction parseNameAndItem(part, pokemon) {\n    let name = '', item\n    part = part.replace(/\\s/g, \"\").split(\"@\")\n    const nicknamed = part[0].indexOf(\"(\")\n\n    if (nicknamed > -1 && (part[0].slice(nicknamed, nicknamed + 3) !== \"(M)\" && part[0].slice(nicknamed, nicknamed + 3) !== \"(F)\")) {\n        for (let i = nicknamed + 1; i < part[0].indexOf(\")\"); i++) {\n            name += part[0][i].toLocaleLowerCase()\n        }\n    } else {\n        if (part[0].includes(\"(\")) {\n            name = part[0].slice(0, part[0].indexOf(\"(\")).toLocaleLowerCase()\n        } else {\n            name = part[0].toLocaleLowerCase()\n        }\n    }\n\n    if (part[1] === undefined) {\n        item = \"\"\n    } else {\n        item = part[1].toLocaleLowerCase().replace(\"-\", \"\")\n    }\n\n    pokemon.name = name.replace(\"'\", \"\")\n    pokemon.item = item\n}\n\nfunction parseEvs(evs, pokemon) {\n    pokemon.spread = [0, 0, 0, 0, 0, 0]\n    const label = { hp: 0, atk: 1, def: 2, spa: 3, spd: 4, spe: 5 }\n\n    evs = evs.split(\":\")\n    evs[1].split(\" / \").forEach(e => {\n        const stat = e.replace(/[0-9' ']/g, '').toLocaleLowerCase()\n        const val = Number(e.replace(/[^0-9]/g, ''))\n        pokemon.spread[label[stat]] = val\n    })\n}\n\nfunction parseIvs(ivs, pokemon) {\n    pokemon.ivs = [31, 31, 31, 31, 31, 31]\n    const label = { hp: 0, atk: 1, def: 2, spa: 3, spd: 4, spe: 5 }\n\n    ivs = ivs.split(\":\")\n    ivs[1].split(\" / \").forEach(e => {\n        const stat = e.replace(/[0-9' ']/g, '').toLocaleLowerCase()\n        const val = Number(e.replace(/[^0-9]/g, ''))\n        pokemon.ivs[label[stat]] = val\n    })\n}\n\nfunction parseMoves(moves, pokemon) {\n    pokemon.moves = []\n    for (let i = 0; i < moves.length; i++) {\n        const m = moves[i].replace(/[^a-zA-Z]/g, '')\n        if (m !== \"\")\n            pokemon.moves.push(m.toLocaleLowerCase())\n    }\n}\n\nexport const parseTeam = function (pokemonTeam) {\n    let team = []\n    let pkmn = pokemonTeam.split('\\n\\n')\n    for (let i = 0; i < pkmn.length; i++) {\n        let p = {}\n        if (pkmn[i] < 3) {\n            break\n        }\n        const pokeman = pkmn[i].split('\\n')\n        parseNameAndItem(pokeman[0], p)\n        parseAbility(pokeman[1], p)\n        let count = 2\n        \n        \n        if (count < pokeman.length) {\n            if (pokeman[count].startsWith(\"Level:\")){\n                parseLevel(pokeman[count], p)\n                count++\n            }\n        }\n        if (count < pokeman.length) {\n            if (pokeman[count].startsWith(\"Shiny:\")) count++\n        }\n\n        if (count < pokeman.length) {\n            if (pokeman[count].startsWith(\"Happiness:\")) count++\n        }\n\n        if (count < pokeman.length) {\n            if (pokeman[count].startsWith(\"EVs:\")) {\n                parseEvs(pokeman[count], p)\n                count++\n            }\n        }\n        if (count < pokeman.length) {\n            if (pokeman[count].includes(\"Nature\")) {\n                p.nature = pokeman[count].split(\" \")[0].toLocaleLowerCase()\n                count++\n            }\n        }\n\n        if (count < pokeman.length) {\n            if (pokeman[count].startsWith(\"IVs:\")) {\n                parseIvs(pokeman[count], p)\n                count++\n            }\n        }\n\n        parseMoves(pokeman.slice(count, pokeman.length), p)\n        team.push(p)\n    }\n    return team\n}"],"sourceRoot":""}